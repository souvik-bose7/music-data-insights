						MUSIC STORE-CREATE TABLES QUERY

CREATE TABLE album(
album_id VARCHAR(50) PRIMARY KEY,
title  VARCHAR(120),
artist_id  VARCHAR(30));

CREATE TABLE artist(
artist_id VARCHAR(50) PRIMARY KEY,
name  VARCHAR(120)); 

CREATE TABLE customer(
customer_id VARCHAR(255) PRIMARY KEY,
first_name CHAR(255),
last_name CHAR(255),
company VARCHAR(255),
address VARCHAR(255),
city VARCHAR(255),
state VARCHAR(255),
country VARCHAR(255),
postal_code BIGINT,
phone BIGINT,
fax BIGINT,
email VARCHAR(255),
support_rep_id VARCHAR(255));


CREATE TABLE employee(
employee_id VARCHAR(50) PRIMARY KEY,
last_name CHAR(50),
first_name CHAR(50),
title VARCHAR(50),
reports_to VARCHAR(30),
levels VARCHAR(10),
birthdate TIMESTAMP,
hire_date TIMESTAMP,
address VARCHAR(120),
city VARCHAR(50),
state VARCHAR(50),
country VARCHAR(30),
postal_code VARCHAR(30),
phone VARCHAR(30),
fax VARCHAR(30),
email VARCHAR(30));

CREATE TABLE genre(
genre_id VARCHAR(50) PRIMARY KEY,
name VARCHAR(30));

CREATE TABLE invoice(
invoice_id VARCHAR(30) PRIMARY KEY,
customer_id VARCHAR(30),
invoice_date TIMESTAMP,
billing_address VARCHAR(120),
billing_city VARCHAR(30),
billing_state VARCHAR(30),
billing_country VARCHAR(30),
billing_postal VARCHAR(30),
total FLOAT8);

CREATE TABLE invoice_line(
invoice_line_id VARCHAR(50) PRIMARY KEY,
invoice_id VARCHAR(30),
track_id VARCHAR(30),
unit_price VARCHAR(30),
quantity VARCHAR(30));

CREATE TABLE media_type(
media_type_id VARCHAR(50) PRIMARY KEY,
name VARCHAR(30));

CREATE TABLE playlist(
playlist_id VARCHAR(50) PRIMARY KEY,
name  VARCHAR(30));


CREATE TABLE track(
    track_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(255),
    album_id VARCHAR(50),
    media_type_id VARCHAR(50),
    genre_id VARCHAR(50),
    composer VARCHAR(255),
    milliseconds BIGINT,
    bytes BIGINT,
    unit_price NUMERIC(5,2)
);

CREATE TABLE playlist_track (
    playlist_id VARCHAR(50) NOT NULL,
    track_id VARCHAR(50) NOT NULL,
    PRIMARY KEY (playlist_id, track_id),
    FOREIGN KEY (playlist_id) REFERENCES playlist(playlist_id),
    FOREIGN KEY (track_id) REFERENCES track(track_id)
);









